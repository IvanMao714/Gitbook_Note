{"./":{"url":"./","title":"Gitbook","keywords":"","body":"Gitbook GitBook 是一个基于 Node.js 的命令行工具，支持 Markdown 和 AsciiDoc 两种语法格式，可以输出 HTML、PDF、eBook 等格式的电子书。 GitBook 不是 Markdown 编辑工具，也不是 Git 版本管理工具。市面上我们可以找到很多 Markdown 编辑器，比如 Typora、MacDown、Bear、MarkdownPad、MarkdownX、JetBrains’s IDE（需要安装插件）、Atom、简书、CSDN 以及 GitBook 自家的 GitBook Editor 。 但 GitBook 又与 Markdown 和 Git 息息相关，因为只有将它们结合起来使用，才能将它们的威力发挥到极致！因此，通常我们会选择合适的 Markdown 编辑工具以获得飞一般的写作体验；使用 GitBook 管理文档，预览、制作电子书；同时通过 Git 管理书籍内容的变更，并将其托管到云端（比如 GitHub、GitLab、码云，或者是自己搭建的 Git 服务器），实现多人协作。 详情请见：Gitbook "},"安装.html":{"url":"安装.html","title":"1.安装","keywords":"","body":"1 安装 1.1 安装Node.js Node.js 选择较低的版本，否则安装gitbook会报错 1.2 执行以下命令安装 GitBook： 现在安装 Node.js 都会默认安装 npm（node 包管理工具），所以我们不用单独安装 npm，打开命令行，执行以下命令安装 GitBook： npm install -g gitbook-cli ubuntu安装npm： curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - sudo apt-get install -y nodejs 1.3 在指定文件夹安装gitbook H: cd note gitbook init 执行完后，你会看到多了两个文件 —— README.md 和 SUMMARY.md，它们的作用如下： README.md —— 书籍的介绍写在这个文件里 SUMMARY.md —— 书籍的目录结构在这里配置 如果没有出现SUMMARY.md文件可以输入 book sm 作用：把原来的summary.md删除掉，再根据文档生成新的summary.md。 1.4 预览gitbook 编写好md文档之后。在note目录中执行下面的命令。 gitbook serve 就会在note目录下面生成 _book文件夹（里面是html静态文件）。并且启动了一个web服务器。 访问http://localhost:4000就可以看到书的效果。 #1.5Error 1.5.1TypeError: cb.apply is not a function "},"使用.html":{"url":"使用.html","title":"2.使用","keywords":"","body":"2 使用 2.1 SUMMARY.md格式 # 目录 * [前言](README.md) * [第一章](Chapter1/README.md) * [第1节：衣](Chapter1/衣.md) * [第2节：食](Chapter1/食.md) * [第3节：住](Chapter1/住.md) * [第4节：行](Chapter1/行.md) * [第二章](Chapter2/README.md) * [第三章](Chapter3/README.md) * [第四章](Chapter4/README.md) 2.2 Markdown语法 2.2.1 基本语法 2.2.2 拓展语法 2.3 gitbook build构建书籍 当写得差不多，可以执行 gitbook build 命令构建书籍，默认将生成的静态网站输出到 _book 目录。实际上，这一步也包含在 gitbook serve 里面，因为它们是 HTML，所以 GitBook 通过 Node.js 提供服务。 当然，build 命令可以指定路径： gitbook build [书籍路径] [输出路径] 2.4 serve 命令指定端口 gitbook serve --port 2333 2.5 生成不同格式的电子书 2.5.1 生成 PDF 格式的电子书 输出为PDF文件，需要先安装gitbook pdf $ npm install gitbook-pdf -g 如果在安装gitbook-pdf时，觉得下载phantomjs包太慢的话，你可以到phantomjs的官方网站上去下载。 http://phantomjs.org/ 这个包的安装方式，参考其官网的说明文档。 然后，用下面的命令就可以生成PDF文件了。 $ gitbook pdf {book_name} 如果，你已经在编写的gitbook当前目录，也可以使用相对路径。 $ gitbook pdf . 然后，你就会发现，你的目录中多了一个名为book.pdf的文件。 2.5.2 生成 epub 格式的电子书 gitbook epub ./ ./mybook.epub 2.5.3 生成 mobi 格式的电子书 gitbook mobi ./ ./mybook.mobi 2.6目录初始化 $ gitbook init $ ls README.md SUMMARY.md book end howtouse output publish $tree . ├── LICENSE ├── README.md ├── SUMMARY.md ├── book │ ├── README.md │ ├── file.md │ └── prjinit.md ├── howtouse │ ├── Nodejsinstall.md │ ├── README.md │ ├── gitbookcli.md │ └── gitbookinstall.md ├── output │ ├── README.md │ ├── outfile.md │ └── pdfandebook.md └── publish ├── README.md └── gitpages.md "},"美化.html":{"url":"美化.html","title":"3.美化","keywords":"","body":"3 美化 3.1去掉“本书由Gitbook” 3.1.1 在根目录下新建styles文件夹，在里面新建website.css文件。 3.1.2 website.css文件内容如下： .gitbook-link { display: none !important; } 3.1.3 在book.json中添加下面的内容。 这个 styles节点在book.json中和\"plugins\"平级。 \"styles\": { \"website\": \"styles/website.css\" } 3.1.4 如果没有book.json,可自行生成文件 之后生成的书就没有“本书由Gitbook”字样了。 3.2 除去列表Introduction项 将首项设为README.md "},"插件.html":{"url":"插件.html","title":"4.插件","keywords":"","body":"4 插件 4.1插件安装流程 4.1.1 配置book.json文件 4.1.2 使用Git Bush（或命令行）gitbook install 进行安装 "},"部署到github.html":{"url":"部署到github.html","title":"5.部署到github","keywords":"","body":"5.部署到github 5.1 构建书籍 首先，使用 gitbook build 将书籍内容输出到默认目录，也就是当前目录下的 _book 目录。 $ gitbook build Starting build ... Successfully built! $ ls _book GLOSSARY.html chapter1 chapter2 gitbook glossary_index.json index.html search_index.json 5.2 创建 gh-pages 分支 git add _book git commit -m \"Publish book\" git push -u origin gh-pages 书籍的内容已经上传到 GitHub 上，所以通过访问 ivanmao714.github.io/Gitbook就可以阅读 test 这本书了！ "}}